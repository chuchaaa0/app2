{"version":3,"sources":["logo.svg","Calendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","title","time","teacher","place","monthsnum","evntsData","Array","date","moment","toObject","events","Calendar","props","state","dateContext","today","showMonthPopup","showYearPopup","selectedDay","weekdays","weekdaysShort","months","year","format","month","daysInMonth","currentDate","console","log","get","currentDay","eventDays","d","mon","y","flag","i","length","da","years","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","nextMonth","add","onNextMonth","prevMonth","subtract","onPrevMonth","onSelectChange","e","onMonthChange","SelectList","popup","map","key","href","onClick","className","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","target","value","onKeyUpYear","which","YearNav","defaultValue","ref","yearInput","onKeyUp","onChange","type","placeholder","onDoubleClick","onDayClick","day","width","style","this","blanks","push","selectedClass","eventClass","totalSlots","rows","cells","forEach","row","insertRow","slice","trElems","dam","geteve","dict","colSpan","React","Component","position","margin","App","alert","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb1de8e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport moment from 'moment';\r\nimport './Calendar.css';\r\nvar data=[{\r\n\t\t\t\t\ttitle: \"No Events Today\",\r\n\t\t\t\t\ttime: \"\",\r\n\t\t\t\t\tteacher:\"\",\r\n\t\t\t\t\tplace:\"\"\r\n\t\t\t\t}];\r\nvar monthsnum = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nvar evntsData = new Array(\r\n\t\t\t{\r\n\t\t\tdate: moment(\"2020.08.02\").toObject(),\r\n\t\t\tevents: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SUNDAY WORKOUT WITH COACH MINI\",\r\n\t\t\t\t\ttime: \"9 am\",\r\n\t\t\t\t\tteacher:\"With Mini\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"BOOTY BURN CHALLENGE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Tej\",\r\n\t\t\t\t\tplace:\"Instagram Live\"\t\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"MORNING FLOW-SUN SALUTE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Jesse\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tdate: moment(\"2020.08.03\").toObject(),\r\n\t\t\tevents: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SUNDAY WORKOUT WITH COACH MINI\",\r\n\t\t\t\t\ttime: \"9 am\",\r\n\t\t\t\t\tteacher:\"With Mini\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"BOOTY BURN CHALLENGE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Tej\",\r\n\t\t\t\t\tplace:\"Instagram Live\"\t\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"MORNING FLOW-SUN SALUTE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Jesse\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tdate: moment(\"2020.08.04\").toObject(),\r\n\t\t\tevents: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SUNDAY WORKOUT WITH COACH MINI\",\r\n\t\t\t\t\ttime: \"9 am\",\r\n\t\t\t\t\tteacher:\"With Mini\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"BOOTY BURN CHALLENGE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Tej\",\r\n\t\t\t\t\tplace:\"Instagram Live\"\t\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"MORNING FLOW-SUN SALUTE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Jesse\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tdate: moment(\"2020.08.06\").toObject(),\r\n\t\t\tevents: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SUNDAY WORKOUT WITH COACH MINI\",\r\n\t\t\t\t\ttime: \"9 am\",\r\n\t\t\t\t\tteacher:\"With Mini\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"BOOTY BURN CHALLENGE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Tej\",\r\n\t\t\t\t\tplace:\"Instagram Live\"\t\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"MORNING FLOW-SUN SALUTE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Jesse\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tdate: moment(\"2020.08.07\").toObject(),\r\n\t\t\tevents: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SUNDAY WORKOUT WITH COACH MINI\",\r\n\t\t\t\t\ttime: \"9 am\",\r\n\t\t\t\t\tteacher:\"With Mini\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"BOOTY BURN CHALLENGE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Tej\",\r\n\t\t\t\t\tplace:\"Instagram Live\"\t\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"MORNING FLOW-SUN SALUTE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Jesse\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tdate: moment(\"2020.08.08\").toObject(),\r\n\t\t\tevents: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"SUNDAY WORKOUT WITH COACH MINI\",\r\n\t\t\t\t\ttime: \"9 am\",\r\n\t\t\t\t\tteacher:\"With Mini\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"BOOTY BURN CHALLENGE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Tej\",\r\n\t\t\t\t\tplace:\"Instagram Live\"\t\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"MORNING FLOW-SUN SALUTE\",\r\n\t\t\t\t\ttime: \"10 am\",\r\n\t\t\t\t\tteacher:\"With Jesse\",\r\n\t\t\t\t\tplace:\"Group class on zoom\"\t\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t);\r\n\r\n\r\nexport default class Calendar extends React.Component {\r\n    state = {\r\n        dateContext: moment(),\r\n        today: moment(),\r\n        showMonthPopup: false,\r\n        showYearPopup: false,\r\n        selectedDay: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.width = props.width || \"350px\";\r\n        this.style = props.style || {};\r\n        this.style.width = this.width; // add this\r\n    }\r\n\t\r\n\t\r\n    weekdays = moment.weekdays(); //[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednessday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n    weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n    months = moment.months();\r\n\r\n    year = () => {\r\n        return this.state.dateContext.format(\"Y\");\r\n    }\r\n    month = () => {\r\n        return this.state.dateContext.format(\"MMMM\");\r\n    }\r\n    daysInMonth = () => {\r\n        return this.state.dateContext.daysInMonth();\r\n    }\r\n    currentDate = () => {\r\n        console.log(\"currentDate: \", this.state.dateContext.get(\"date\"));\r\n        return this.state.dateContext.get(\"date\");\r\n    }\r\n    currentDay = () => {\r\n        return this.state.dateContext.format(\"D\");\r\n    }\r\n\r\n    eventDays = (d , mon , y) => {\r\n    \t\r\n    var flag= false ;\r\n    for(var i=0 ; i<evntsData.length ; i++){\r\n    \tvar da=evntsData[i].date ;\r\n    \t\r\n    \tvar dam= da.date;\r\n    \tconsole.log(\"qwer: \", mon);\r\n\r\n    \tif((da.date == d)&&(da.months == mon)&&(da.years == y)){\r\n    \t\t\r\n    \t\t\t\tflag=true ;\r\n    \t\t\t\tbreak;\r\n    \t\t\r\n\t\t\t\r\n    \t}\r\n\tconsole.log(\"qwer2: \", flag);\r\n\r\n   \t}\r\n   \treturn flag ;\r\n    }\r\n\t\r\n\t\r\n\r\n    firstDayOfMonth = () => {\r\n        let dateContext = this.state.dateContext;\r\n        let firstDay = moment(dateContext).startOf('month').format('d'); // Day of week 0...1..5...6\r\n        return firstDay;\r\n    }\r\n\r\n    setMonth = (month) => {\r\n        let monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    }\r\n\r\n    nextMonth = () => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(1, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n        this.props.onNextMonth && this.props.onNextMonth();\r\n    }\r\n\r\n    prevMonth = () => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).subtract(1, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n        this.props.onPrevMonth && this.props.onPrevMonth();\r\n    }\r\n\r\n    onSelectChange = (e, data) => {\r\n        this.setMonth(data);\r\n        this.props.onMonthChange && this.props.onMonthChange();\r\n\r\n    }\r\n    SelectList = (props) => {\r\n        let popup = props.data.map((data) => {\r\n            return (\r\n                <div key={data}>\r\n                    <a href=\"#\" onClick={(e)=> {this.onSelectChange(e, data)}}>\r\n                        {data}\r\n                    </a>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"month-popup\">\r\n                {popup}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onChangeMonth = (e, month) => {\r\n        this.setState({\r\n            showMonthPopup: !this.state.showMonthPopup\r\n        });\r\n    }\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <span className=\"label-month\"\r\n                onClick={(e)=> {this.onChangeMonth(e, this.month())}}>\r\n                {this.month()}\r\n                {this.state.showMonthPopup &&\r\n                 <this.SelectList data={this.months} />\r\n                }\r\n            </span>\r\n        );\r\n    }\r\n\r\n    showYearEditor = () => {\r\n        this.setState({\r\n            showYearNav: true\r\n        });\r\n    }\r\n\r\n    setYear = (year) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"year\", year);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        })\r\n    }\r\n    onYearChange = (e) => {\r\n        this.setYear(e.target.value);\r\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\r\n    }\r\n\r\n    onKeyUpYear = (e) => {\r\n        if (e.which === 13 || e.which === 27) {\r\n            this.setYear(e.target.value);\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    }\r\n\r\n    YearNav = () => {\r\n        return (\r\n            this.state.showYearNav ?\r\n            <input\r\n                defaultValue = {this.year()}\r\n                className=\"editor-year\"\r\n                ref={(yearInput) => { this.yearInput = yearInput}}\r\n                onKeyUp= {(e) => this.onKeyUpYear(e)}\r\n                onChange = {(e) => this.onYearChange(e)}\r\n                type=\"number\"\r\n                placeholder=\"year\"/>\r\n            :\r\n            <span\r\n                className=\"label-year\"\r\n                onDoubleClick={(e)=> { this.showYearEditor()}}>\r\n                {this.year()}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    onDayClick = (e, day) => {\r\n        this.setState({\r\n            selectedDay: day\r\n        }, () => {\r\n            console.log(\"SELECTED DAY: \", this.state.selectedDay);\r\n        });\r\n\t\t\r\n        this.props.onDayClick && this.props.onDayClick(e, day);\r\n    }\r\n\r\n    \r\n\t\r\n\r\n\r\n    render() {\r\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\r\n        let weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day} className=\"week-day\">{day}</td>\r\n            )\r\n        });\r\n\r\n        let blanks = [];\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(<td key={i * 80} className=\"emptySlot\">\r\n                {\"\"}\r\n                </td>\r\n            );\r\n        }\r\n\r\n        console.log(\"blanks: \", blanks);\r\n\t\tlet mon=monthsnum.indexOf(this.month()) ;\r\n\t\tlet y=this.year();\r\n        let daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let className = (d == this.currentDay() ? \"day current-day\": \"day\");\r\n            let selectedClass = (d == this.state.selectedDay ? \" selected-day \" : \"\");\r\n\r\n            let eventClass = (this.eventDays(d , mon , y) ? \"event-day\" : \"\") ;\r\n\r\n            daysInMonth.push(\r\n                <td key={d} className={className + selectedClass + eventClass} >\r\n                    <span onClick={(e)=>{this.onDayClick(e, d)}}>{d}</span>\r\n                </td>\r\n            );\r\n        }\r\n\r\n\r\n        console.log(\"days: \", daysInMonth);\r\n\r\n        var totalSlots = [...blanks, ...daysInMonth];\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if ((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                let insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                let insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n            }\r\n        });\r\n\r\n        let trElems = rows.map((d, i) => {\r\n            return (\r\n                <tr key={i*100}>\r\n                    {d}\r\n                </tr>\r\n            );\r\n        })\r\n\t\t\r\n\t\t\r\n\t\t\tvar flag = false ;\r\n\t\t\tvar dam = this.state.selectedDay ;\r\n\t\t\t\r\n\t\t\tfor(var i=0 ; i<evntsData.length ; i++){\r\n\t\t\t\tvar da=evntsData[i].date ;\r\n\t\t\t\tif((da.date == dam)&&(da.months == mon)&&(da.years == this.year())){\r\n\t    \t\t\t\tflag=true ;\r\n\t    \t\t\t\tdata = evntsData[i].events ;\r\n\t    \t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\tlet geteve = data.map((dict) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"eventwise\">\r\n\t\t\t\t\t<h2>{dict.title}</h2>\r\n\t\t\t\t\t<p>{dict.teacher}</p>\r\n\t\t\t\t\t<p>{dict.time}</p>\r\n\t\t\t\t\t<p>{dict.place}</p>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t});\r\n\r\n        return (\r\n        \t<div>\r\n\t            <div className=\"calendar-container\" style={this.style}>\r\n\t                <table className=\"calendar\">\r\n\t                    <thead>\r\n\t                        <tr className=\"calendar-header\">\r\n\t                            <td colSpan=\"5\">\r\n\t                                <this.MonthNav />\r\n\t                                {\" \"}\r\n\t                                <this.YearNav />\r\n\t                            </td>\r\n\t                            <td colSpan=\"2\" className=\"nav-month\">\r\n\t                                <i className=\"prev fa fa-fw fa-chevron-left\"\r\n\t                                    onClick={(e)=> {this.prevMonth()}}>\r\n\t                                </i>\r\n\t                                <i className=\"prev fa fa-fw fa-chevron-right\"\r\n\t                                    onClick={(e)=> {this.nextMonth()}}>\r\n\t                                </i>\r\n\r\n\t                            </td>\r\n\t                        </tr>\r\n\t                    </thead>\r\n\t                    <tbody>\r\n\t                        <tr>\r\n\t                            {weekdays}\r\n\t                        </tr>\r\n\t                        {trElems}\r\n\t                    </tbody>\r\n\t                </table>\r\n\r\n\t            </div>\r\n\t            <div className=\"eventsOfTheDay\">\r\n\t            \t<form className = \"eee\">\r\n\t            \t\t{geteve}\r\n\t            \t</form>\r\n\t            </div>\r\n\t        </div>    \r\n\r\n        );\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Calendar from './Calendar.js';\n\nconst style = {\n  position: \"relative\",\n  margin: \"50px auto\"\n}\n\nclass App extends React.Component {\n  onDayClick = (e, day) => {\n    alert(day);\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar style={style} width=\"302px\" \n          onDayClick={(e, day)=> this.onDayClick(e, day)}/>     \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}